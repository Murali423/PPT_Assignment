a = [1,2,3,4,5,6,7,8]
target = 8 

class Search:
    def __init__(self,a,x):
        self.a = a
        self.x = x
        
    def linearSearch(self):
        """we can search any element in O(N) Time complexity fashion and no need to be sorted
           retuns the index of the target element if not there returns -1
        """
        for i in range (len(self.a)):
            if self.a[i] == self.x:
                return i
        return -1
        
    def binarySerachNormal(self):
        """we can search any element in O(logN) Time complexity fashion and  need to be sorted
           retuns the index of the target element if not there returns -1
        """
        l = 0
        r = len(self.a)-1
        while l <= r:
            mid = l+(r-l)//2
            if self.a[mid] == self.x:
                return mid
            if self.a[mid]< self.x:
                l = mid+1
            else:
                r = mid-1
        return -1
       
s = Search(a,target)
m = s.binarySerachNormal()
print(m)
m = s.linearSearch()
print(m)

        
        
